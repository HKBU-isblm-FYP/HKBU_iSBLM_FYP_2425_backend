import{a4 as n}from"./index-B-03LEUy.js";const r=localStorage.getItem(n);async function s(o){try{if(!o.value)throw new Error("Lesson ID is undefined");const e=await fetch(`/api/lessons/${o.value}`,{headers:{Authorization:`Bearer ${r}`}});if(!e.ok)throw new Error("Response not ok");return await e.json()}catch(e){console.error("Failed to fetch lesson detail:",e)}}async function c(o){try{if(!o.value)throw new Error("Lesson ID is undefined");return(await s(o)).md}catch(e){console.error("Failed to fetch lesson detail:",e)}}async function l(o){try{if(!o.value)throw new Error("Lesson ID is undefined");return(await s(o)).html}catch(e){console.error("Failed to fetch lesson detail:",e)}}async function d(o,e){try{if(!o.value)throw new Error("Lesson ID is undefined");const t=await fetch(`/api/lessons/updateHTML/${o.value}`,{method:"PATCH",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify({html:e.value})});if(!t.ok)throw new Error("Response not ok");return await t.json()}catch(t){console.error("Failed to UPDATE lesson detail:",t)}}async function h(o){try{if(!o.value)throw new Error("Lesson ID is undefined");const e=await fetch(`/api/json2md/lesson/${o.value}`,{headers:{Authorization:`Bearer ${r}`}});if(!e.ok)throw new Error("Response not ok");return await e.json()}catch(e){console.error("Failed to fetch lesson detail:",e)}}async function f(o){try{const e=await fetch("/api/lessons/create",{method:"POST",headers:{Authorization:`Bearer ${r}`},body:o});if(!e.ok)throw new Error("Response not ok");const t=await e.json();return console.log(t),t}catch(e){console.error("Failed to fetch lesson detail:",e)}}async function u(o,e){try{if(!o.value)throw new Error("Lesson ID is undefined");const t=await fetch(`/api/lessons/updateMD/${o.value}`,{method:"PATCH",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify({md:e.value})});if(!t.ok)throw new Error("Response not ok");return await t.json()}catch(t){console.error("Failed to UPDATE lesson detail:",t)}}async function w(o){try{if(!o.value)throw new Error("Textbook ID is undefined");const e=await fetch(`/api/textbooks/get/${o.value}`,{headers:{Authorization:`Bearer ${r}`}});if(!e.ok)throw new Error("Response not ok");const t=await e.json();return console.log(t),t}catch(e){console.error("Failed to fetch lesson detail:",e)}}async function p(o){try{const e=localStorage.getItem(n),t=await fetch("/api/textbooks/convert-create",{method:"POST",headers:{Authorization:`Bearer ${e}`},body:o});if(!t.ok)throw new Error("Response not ok");const a=await t.json();return console.log(a),a}catch(e){console.error("Failed to fetch lesson detail:",e)}}async function y(o){console.log("Getting Project");try{const e=await fetch(`/api/projects/${o}`,{headers:{Authorization:`Bearer ${r}`}});if(e.status===404)throw new Error("Lesson not found");const t=await e.json();return console.log(t),t}catch(e){console.error(e)}}async function D(o){try{const e=await fetch(`/api/lessons/getAnnotation/${o.value}`,{headers:{Authorization:`Bearer ${r}`}});if(e.status===404)throw new Error("Lesson not found");if(e.ok)console.log("feftch lesson Annotation OK");else throw new Error(e);return await e.json()}catch(e){console.error(e)}}async function k(o,e){try{const t=await fetch(`/api/lessons/updateAnnotation/${o.value}`,{method:"PATCH",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify(e)});if(t.status===404)throw new Error("Lesson not found");const a=await t.json();return console.log(a),a}catch(t){console.error(t)}}export{f as a,s as b,p as c,l as d,D as e,y as f,c as g,w as h,u as i,d as j,h as k,k as u};
