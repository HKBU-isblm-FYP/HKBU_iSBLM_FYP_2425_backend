import{k as b,r as l,f as v,o as n,c as r,a as o,l as m,w as _,v as D,b as k}from"./index-B-03LEUy.js";import{c as M}from"./CRUD-xJdNO43X.js";const h={class:"container mt-5"},y={class:"mb-3"},x={key:0,for:"formFile",class:"form-label"},F={key:1,for:"formFile",class:"form-label"},N={class:"mb-3"},w=o("label",{for:"fileName",class:"form-label"},"Textbook Name",-1),g=o("div",{class:"mb-3"},[o("button",{type:"submit",class:"btn btn-primary"},"Upload")],-1),U={__name:"TextbookUploadView",setup(B){const i=b();l(i.name);const s=l(i.params.type),a=l(null),c=l(""),t=()=>s.value=="nonMD",u=e=>{a.value=e.target.files[0]},p=async()=>{if(!a.value||!c.value)return;console.log(a.value);const e=new FormData;e.append("file",a.value),e.append("name",c.value),t()?M(e):s.value};return v(()=>{t()?console.log("NonMD Create"):s.value==="MD"&&console.log("MD Create")}),(e,d)=>(n(),r("div",h,[o("form",{onSubmit:k(p,["prevent"]),class:"card p-3"},[o("div",y,[t()?(n(),r("label",x,"(DOCX / PDF) Default textbook input example; Will upload and convert it to Markdown and save to DB !")):m("",!0),t()?m("",!0):(n(),r("label",F," Upload an Markdown and save to DB !")),o("input",{class:"form-control",type:"file",accept:".docx, .pdf",id:"formFile",onChange:u},null,32)]),o("div",N,[w,_(o("input",{type:"text",class:"form-control",id:"fileName","onUpdate:modelValue":d[0]||(d[0]=f=>e.name=f),placeholder:"Enter textbook name"},null,512),[[D,e.name]])]),g],32)]))}};export{U as default};
